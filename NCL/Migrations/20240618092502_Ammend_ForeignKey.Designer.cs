// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NCL.Data;

#nullable disable

namespace NCL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240618092502_Ammend_ForeignKey")]
    partial class Ammend_ForeignKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NCL.Shared.Entities.Document", b =>
                {
                    b.Property<int>("Document__ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Document__ID"));

                    b.Property<string>("Document__Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document__Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Document__ID");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("NCL.Shared.Entities.Employee", b =>
                {
                    b.Property<int>("Employee__ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Employee__ID"));

                    b.Property<DateTime?>("Employee__Log")
                        .HasColumnType("datetime2");

                    b.Property<string>("Employee__Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Employee__ID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("NCL.Shared.Entities.Guest", b =>
                {
                    b.Property<int>("Guest__ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Guest__ID"));

                    b.Property<string>("Guest__Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Guest__DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Guest__Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationLocation__ID")
                        .HasColumnType("int");

                    b.HasKey("Guest__ID");

                    b.HasIndex("LocationLocation__ID");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("NCL.Shared.Entities.Image", b =>
                {
                    b.Property<int>("Image__ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Image__ID"));

                    b.Property<int>("ImageTagImageTag__ID")
                        .HasColumnType("int");

                    b.Property<string>("Image__Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image__Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image__Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Image__ID");

                    b.HasIndex("ImageTagImageTag__ID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("NCL.Shared.Entities.ImageTag", b =>
                {
                    b.Property<int>("ImageTag__ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageTag__ID"));

                    b.Property<string>("ImageTag__Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageTag__ID");

                    b.ToTable("ImageTags");
                });

            modelBuilder.Entity("NCL.Shared.Entities.Location", b =>
                {
                    b.Property<int>("Location__ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Location__ID"));

                    b.Property<string>("Location__Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Location__ID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("NCL.Shared.Entities.Video", b =>
                {
                    b.Property<int>("Video__ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Video__ID"));

                    b.Property<int?>("LocationLocation__ID")
                        .HasColumnType("int");

                    b.Property<int>("VideoTypeVideoType__ID")
                        .HasColumnType("int");

                    b.Property<string>("Video__Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video__Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ViewBy")
                        .HasColumnType("bit");

                    b.HasKey("Video__ID");

                    b.HasIndex("LocationLocation__ID");

                    b.HasIndex("VideoTypeVideoType__ID");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("NCL.Shared.Entities.VideoType", b =>
                {
                    b.Property<int>("VideoType__ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VideoType__ID"));

                    b.Property<string>("VideoType__Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VideoType__ID");

                    b.ToTable("VideoTypes");
                });

            modelBuilder.Entity("NCL.Shared.Entities.Guest", b =>
                {
                    b.HasOne("NCL.Shared.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationLocation__ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("NCL.Shared.Entities.Image", b =>
                {
                    b.HasOne("NCL.Shared.Entities.ImageTag", "ImageTag")
                        .WithMany()
                        .HasForeignKey("ImageTagImageTag__ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImageTag");
                });

            modelBuilder.Entity("NCL.Shared.Entities.Video", b =>
                {
                    b.HasOne("NCL.Shared.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationLocation__ID");

                    b.HasOne("NCL.Shared.Entities.VideoType", "VideoType")
                        .WithMany()
                        .HasForeignKey("VideoTypeVideoType__ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("VideoType");
                });
#pragma warning restore 612, 618
        }
    }
}
