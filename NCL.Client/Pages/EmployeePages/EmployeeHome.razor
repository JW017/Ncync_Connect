@page "/Employee/{emp:int}/Home"

@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@using static System.Net.WebRequestMethods
@using NCL.Shared.Entities;

@inject IJSRuntime JSRuntime
@rendermode @(new InteractiveServerRenderMode(prerender:false))
@inject NavigationManager Navigation
@inject HttpClient Http
@inject AuthenticationStateProvider IdentityValidationProvider

@attribute [StreamRendering]
@attribute [Authorize]


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="css/style-home.css" />
    <link rel="stylesheet" href="css/employeeLayout.css" />
    <link rel="stylesheet" href="css/FilterDropDown.css" />
    <title>NCL Employee Home</title>
</head>

<body>
    <img id="emp-home-gif" src="Asset/EmployeeAsset/HomePage/emp-home-gif.gif" type="image/gif">

    <div class="home__nav">
        <nav>
            <div class="nav__logo"><img src="/Asset/NamCheongLogo.png" alt="NCL Logo"></div>
            <ul class="nav__links">
                <li class="link">
                    <div class="dropdown">
                        <button class="nav__btn">
                            =
                        </button>
                        <div class="dropdown-content">
                            <a href="" @onclick="@(()=>GoTo("Home"))" style="text-align: left;">Home</a>
                            <a href="" @onclick="@(()=>GoTo("Moment"))" style="text-align: left;">Joyous Moment</a>
                            <a href="" @onclick="@(()=>GoTo("MyMoment"))" style="text-align: left;">My Moment</a>
                            <a href="" @onclick="@(()=>BeginLogOut())" style="text-align: left;">Logout</a>
                        </div>
                    </div>
                </li>
            </ul>
        </nav>
    </div>

    <section>
        <div class="home-text-box">
            <div class="text-Nam">Nam</div>
            <div class="text-Cheong">Cheong</div>
            <div class="text-Welcome">Welcome back, @UserName!</div>
            <div class="btn-frame">
                <div class="button">test1</div>
                <div class="button">test2</div>
                <div class="button">test3</div>
            </div>
        </div>
        <img class="white-polygon" src="Asset/EmployeeAsset/white-polygon.png">
    </section>


    <!-- MAIN (Center website) -->
    <div class="main">

        <h1 class="page-name">Write something here</h1>
        <div class="filter-center">
            <input id="filter-box" type="text" placeholder="Search.." onkeyup="filterFunction('filter-box', 'filter-myDropdown-p', 'h4')">
        </div>
        <hr>

        <div class="row" id="filter-myDropdown-p">

        @foreach (var p in pages)
        {
        <div class="column showit @p.Page__SequenceNo">
            <div class="hover-shadow cursor">
                <div class="content" @onclick="()=>GoToPage(p.Page__ID)">
                    <h4 style="margin: auto;">@p.Page__Name @p.Page__SecondName</h4>
                </div>
            </div>
        </div>
        }

        </div>
        
    </div>

    <!-- JOYOUS MOMENT -->
    <section>
        <div class="joyous-content">
            <img class="joyous-image" src="Asset/EmployeeAsset/HomePage/joyous-side.jpg">
            <div class="joyous-text-box-1">
                <p class="joyous-text" @onclick="@(()=>GoTo("Moment"))">Joyous Moment Gallery</p>
                <p class="description">
                    Whether it’s a personal achievement, a special family event, a fun hobby,
                    or a professional milestone, we want to celebrate these moments together.
                </p>
                <span class="side-icon"></span>
            </div>
            <div class="joyous-text-box-2">
                <p class="joyous-text">My Moments</p>
                <p class="description">
                    Whether it’s a personal achievement, a special family event, a fun hobby,
                    or a professional milestone, we want to celebrate these moments together.
                </p>
                <span class="side-icon"></span>
            </div>
        </div>

    </section>

    <!-- FOOTER -->
    <section id="footer-emp">
        <div class="footer-emp">
            <img id="emp-home-footer-gif" src="Asset/EmployeeAsset/HomePage/emp-home-footer.png">
            <img class="footer-logo" src="Asset/EmployeeAsset/white-logo.png">
            <div class="line"></div>
            <div class="text-copyright">© 2024 Nam Cheong Dockyard Sdn Bhd. All Rights Reserved.</div>
        </div>
    </section>

</body>
</html>

<script src="js/filterDropDown.js"></script>

@code {
    private bool UserAuthenticated => Authenticationstate.User.Identity?.IsAuthenticated ?? false;
    private string UserName => Authenticationstate.User.Identity?.Name ?? "Unknown";
    private AuthenticationState Authenticationstate { get; set; }

    [Parameter] public int? ID { get; set; }
    [Parameter] public int emp { get; set; }

    List<Employee> employeesList = new List<Employee>();
    public Employee employees { get; set; } = new Employee();

    public string? Username { get; set; }

    public Page page { get; set; } = new Page();
    List<Page> pages = new List<Page>();

    protected override async Task OnParametersSetAsync()
    {
        Authenticationstate = await IdentityValidationProvider.GetAuthenticationStateAsync();
        var user = Authenticationstate.User;
        Username = UserName;

        var existingEmployee = await Http.GetFromJsonAsync<Employee>($"https://localhost:7219/api/Employees/{(string)Username}");
        if (existingEmployee != null && existingEmployee.Employee__Name == UserName)
        {
            employees = existingEmployee;

            //Update log
            existingEmployee.Employee__Log = DateTime.Now;
            var result = await Http.PutAsJsonAsync($"https://localhost:7219/api/Employees/UpdateEmployeeByID/{existingEmployee.Employee__ID}", existingEmployee);

            Console.WriteLine("Existing Employee in Employee Home - " + @UserName);
            emp = employees.Employee__ID;
        }
        else
        {
            emp = employees.Employee__ID;
            Console.WriteLine("You are not Employee under NCL");
            Navigation.NavigateTo("https://localhost:7219/", true);
        }
    }



    protected override async Task OnInitializedAsync()
    {
        Authenticationstate = await IdentityValidationProvider.GetAuthenticationStateAsync();
        var user = Authenticationstate.User;
        Username = UserName;

        // Fetch the video from the SQL database
        await LoadPage();

    }

    async Task LoadPage()
    {
        var result = await Http.GetFromJsonAsync<List<Page>>("https://localhost:7219/api/Pages/GetPage");
        if (result != null)
        {   
            pages = result;
        }
    }


    public void BeginLogOut()
    {
        Navigation.NavigateToLogout("/MicrosoftIdentity/Account/SignOut", "/");
    }

    public void GoToPage(int pageNo)
    {
        Navigation.NavigateTo("/Employee/"+ emp +"/Page/" + pageNo);
    }

    public void GoTo(string page)
    {
        Navigation.NavigateTo("/Employee/" + emp + "/" + page);
    }

}





